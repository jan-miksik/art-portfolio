/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Coin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Coin__factory>;
    getContractFactory(
      name: "GoodSamaritan",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GoodSamaritan__factory>;
    getContractFactory(
      name: "INotifyable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INotifyable__factory>;
    getContractFactory(
      name: "Wallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Wallet__factory>;
    getContractFactory(
      name: "Coin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Coin__factory>;
    getContractFactory(
      name: "GoodSamaritan",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GoodSamaritan__factory>;
    getContractFactory(
      name: "INotifyable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INotifyable__factory>;
    getContractFactory(
      name: "Wallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Wallet__factory>;
    getContractFactory(
      name: "Coin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Coin__factory>;
    getContractFactory(
      name: "GoodSamaritan",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GoodSamaritan__factory>;
    getContractFactory(
      name: "INotifyable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INotifyable__factory>;
    getContractFactory(
      name: "Wallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Wallet__factory>;
    getContractFactory(
      name: "NftHat",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NftHat__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC2981",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Coin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Coin>;
    getContractAt(
      name: "GoodSamaritan",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GoodSamaritan>;
    getContractAt(
      name: "INotifyable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INotifyable>;
    getContractAt(
      name: "Wallet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Wallet>;
    getContractAt(
      name: "Coin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Coin>;
    getContractAt(
      name: "GoodSamaritan",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GoodSamaritan>;
    getContractAt(
      name: "INotifyable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INotifyable>;
    getContractAt(
      name: "Wallet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Wallet>;
    getContractAt(
      name: "Coin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Coin>;
    getContractAt(
      name: "GoodSamaritan",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GoodSamaritan>;
    getContractAt(
      name: "INotifyable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INotifyable>;
    getContractAt(
      name: "Wallet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Wallet>;
    getContractAt(
      name: "NftHat",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NftHat>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
